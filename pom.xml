<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.xkcoding</groupId>
  <artifactId>spring-boot-demo</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <modules>
    <module>spring-boot-demo</module>
    <module>red5</module>
  </modules>
  <packaging>pom</packaging>
  <name>spring-boot-demo</name>
  <url>http://xkcoding.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring.boot.version>2.1.0.RELEASE</spring.boot.version>
    <mysql.version>8.0.12</mysql.version>
    <hutool.version>5.0.0</hutool.version>
    <guava.version>29.0-jre</guava.version>
    <user.agent.version>1.20</user.agent.version>
  </properties>

  <repositories>
    <repository>
      <id>aliyun</id>
      <name>aliyun</name>
      <url>https://maven.aliyun.com/repository/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <!-- hutool工具类 -->
      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>${hutool.version}</version>
      </dependency>
      <!-- guava工具类 -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <!-- 解析 UserAgent 信息 -->
      <dependency>
        <groupId>eu.bitwalker</groupId>
        <artifactId>UserAgentUtils</artifactId>
        <version>${user.agent.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <plugins>
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <configuration>
      <archive>
        <manifest>
          <addClasspath>true</addClasspath>
          <classpathPrefix>lib/</classpathPrefix>
          <mainClass>com.guosheng.SpringBootDemoDockerApplication</mainClass>
        </manifest>
      </archive>
    </configuration>
  </plugin>
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-dependency-plugin</artifactId>
    <executions>
      <execution>
        <id>copy-dependencies</id>
        <phase>prepare-package</phase>
        <goals>
          <goal>copy-dependencies</goal>
        </goals>
        <configuration>
          <outputDirectory>${project.build.directory}/lib</outputDirectory>
          <overWriteReleases>false</overWriteReleases>
          <overWriteSnapshots>false</overWriteSnapshots>
          <overWriteIfNewer>true</overWriteIfNewer>
        </configuration>
      </execution>
    </executions>
  </plugin>

  <plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>build-helper-maven-plugin</artifactId>
    <version>3.0.0</version>
    <executions>
      <execution>
        <id>timestamp-property</id>
        <goals>
          <goal>timestamp-property</goal>
        </goals>
        <configuration>
          <name>timestamp</name>
          <pattern>yyyyMMdd</pattern>
          <timeZone>GMT+8</timeZone>
        </configuration>
      </execution>
    </executions>
  </plugin>

  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <configuration>
      <source>8</source>
      <target>8</target>
    </configuration>
  </plugin>


  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <configuration>
      <skip>true</skip>
    </configuration>
  </plugin>

</plugins>
<resources>
<resource>
  <directory>src/main/resources</directory>
  <filtering>true</filtering>
  <includes>
    <include>*.txt</include>
    <include>*.xml</include>
    <include>*.properties</include>
    <include>mappers/*</include>
    <include>static/**</include>
    <!--<include>templates/view/*</include>-->
  </includes>
</resource>

<resource>
  <directory>src/main/resources/templates</directory>
  <!-- 关闭filtering特性，防止文件被损坏 -->
  <filtering>false</filtering>
  <targetPath>templates</targetPath>
  <includes>
    <include>*.xlsx</include>
  </includes>
</resource>

<resource>
  <directory>src/main/resources</directory>
  <filtering>false</filtering>
  <targetPath>config</targetPath>
  <includes>
    <include>*.xml</include>
  </includes>
</resource>

<resource>
  <directory>src/main/resources</directory>
  <targetPath>config</targetPath>
  <excludes>
    <exclude>application.properties</exclude>
    <exclude>bootstrap.yml</exclude>
  </excludes>
</resource>
<resource>
  <directory>src/main/resources</directory>
  <filtering>true</filtering>
  <includes>
    <include>application.properties</include>
    <include>bootstrap.yml</include>
  </includes>
</resource>
<!--<resource>-->
  <!--<directory>../config/${env}</directory>-->
  <!--<targetPath>config</targetPath>-->
<!--</resource>-->
</resources>
</build>
</project>
